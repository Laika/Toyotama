[project]
name = "toyotama"
version = "0.9.11"
description = "Python library for CTF."
authors = [{ name = "Laika", email = "laika@albina.cc" }]
maintainers = [{ name = "Laika", email = "laika@albina.cc" }]
license = "MIT"
readme = "README.md"
repository = "https://github.com/Laika/Toyotama"
homepage = "https://github.com/Laika/Toyotama"
keywords = ["CTF"]
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Operating System :: POSIX :: Linux",
]
packages = [{ include = "toyotama" }]
requires-python = ">= 3.8"

dependencies = [
    "libtmux>=0.37.0",
    "lief>=0.14.1",
    "rzpipe>=0.6.0",
    "pillow>=10.3.0",
    "py7zr>=0.21.0",
    "flask>=3.0.3",
    "rich>=13.7.1",
    "setuptools>=70.1.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.scripts]
dcmp = "toyotama.util.decompress:main"

[tool.rye]
managed = true
dev-dependencies = ["ruff>=0.4.9"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["toyotama"]


[tool.ruff]
line-length = 150
target-version = "py312"

select = ["E", "F", "C90", "I", "N", "UP", "PERF", "PL"]
ignore = []

fixable = [
  "A",
  "B",
  "C",
  "D",
  "E",
  "F",
  "G",
  "I",
  "N",
  "Q",
  "S",
  "T",
  "W",
  "ANN",
  "ARG",
  "BLE",
  "COM",
  "DJ",
  "DTZ",
  "EM",
  "ERA",
  "EXE",
  "FBT",
  "ICN",
  "INP",
  "ISC",
  "NPY",
  "PD",
  "PGH",
  "PIE",
  "PL",
  "PT",
  "PTH",
  "PYI",
  "RET",
  "RSE",
  "RUF",
  "SIM",
  "SLF",
  "TCH",
  "TID",
  "TRY",
  "UP",
  "YTT",
]
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
]
unfixable = []

[tool.ruff.pydocstyle]
convention = "google"
